/*
 * SMF PDU Session
 *
 * SMF PDU Session Service
 *
 * API version: 1.PreR15.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package nfclient

import (
	"bytes"
	"context"
	"github.com/jerryduren/5gc/model"
	"encoding/json"
	"fmt"
	"io/ioutil"
	"log"
	"mime/multipart"
	"net/http"
	"net/textproto"
)

// Linger please
var (
	_ context.Context
)

type SMContextsCollectionApiService service
/*type IndividualSMContextApiService service
type PDUSessionsCollection service
type IndividualPDUSessionForHSMF service*/

func (a *SMContextsCollectionApiService) PostSmContexts(ctx context.Context, body model.SmContextCreateBody) (model.SmContextCreatedData, *http.Response, error) {
	localVarReturnValue:=  model.SmContextCreatedData{}
	
	// 的機遇SmContextCreateBody是一個multipart/related的數據類型
	// Set the Body of Request
	localBody:=bytes.NewBuffer([]byte{})
	w:=multipart.NewWriter(localBody)
	w.SetBoundary("----Boundary")
	// Set JSON part
	mHead:=textproto.MIMEHeader{}
	mHead.Set("Content-Type","application/json")
	part,err:=w.CreatePart(mHead)
	if err!=nil{
		log.Fatal(err)
		return localVarReturnValue,nil,err
	}
	partData,err:=json.Marshal(body.JsonData)
	if err!=nil{
		log.Fatal(err)
		return localVarReturnValue,nil,err
	}
	_,err=part.Write(partData)
	if err!=nil{
		log.Fatal(err)
		return localVarReturnValue,nil,err
	}
	// Set N1MSG ANS.1
	mHead.Set("Content-Type","application/vnd.3gpp.5gnas")
	mHead.Set("Content-Id","n1msg")
	part,err=w.CreatePart(mHead)
	if err!=nil{
		log.Fatal(err)
		return localVarReturnValue,nil,err
	}
	_,err=part.Write(body.BinaryDataN1SmMessage)
	if err!=nil{
		log.Fatal(err)
		return localVarReturnValue,nil,err
	}
	w.Close()

	// Init new request message
	req, err:=http.NewRequest("Post","http://localhost:8080/nsmf-pdusession/v1/sm-contexts",localBody)
	if err!=nil{
		log.Fatal(err)
	}
	
	// Set Path Parameters
	// TODO
	
	// Set Query Parameters
	// TODO
	
	// Set Request Header
	// TODO
	
	// Set Header parameters
	// TODO
	req.Header.Set("Content-Type","multipart/related")
	
	fmt.Println(req.Method)
	
	rsp, err := a.client.callAPI(req)
	if err != nil || rsp == nil {
		return localVarReturnValue, nil, err
	}
	localVarBody, err := ioutil.ReadAll(rsp.Body)
	rsp.Body.Close()
	if err != nil {
		return localVarReturnValue, rsp, err
	}
	
	fmt.Println(rsp.StatusCode)
	
	if rsp.StatusCode < 300 {
		// If we succeed, return the data, otherwise pass on to decode error.
		err = a.client.decode(&localVarReturnValue, localVarBody, rsp.Header.Get("Content-Type"))
		if err == nil {
			return localVarReturnValue, rsp, err
		}
	}
	
	if rsp.StatusCode >= 300 {
		newErr := GenericOpenAPIError{
			body:  localVarBody,
			error: rsp.Status,
		}
		if rsp.StatusCode == 201 {
			var v model.SmContextCreatedData
			err = a.client.decode(&v, localVarBody, rsp.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, rsp, newErr
			}
			newErr.model = v
			return localVarReturnValue, rsp, newErr
		}
		if rsp.StatusCode == 400 {
			var v model.SmContextCreateError
			err = a.client.decode(&v, localVarBody, rsp.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, rsp, newErr
			}
			newErr.model = v
			return localVarReturnValue, rsp, newErr
		}
		if rsp.StatusCode == 403 {
			var v model.SmContextCreateError
			err = a.client.decode(&v, localVarBody, rsp.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, rsp, newErr
			}
			newErr.model = v
			return localVarReturnValue, rsp, newErr
		}
		if rsp.StatusCode == 404 {
			var v model.SmContextCreateError
			err = a.client.decode(&v, localVarBody, rsp.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, rsp, newErr
			}
			newErr.model = v
			return localVarReturnValue, rsp, newErr
		}
		if rsp.StatusCode == 500 {
			var v model.SmContextCreateError
			err = a.client.decode(&v, localVarBody, rsp.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, rsp, newErr
			}
			newErr.model = v
			return localVarReturnValue, rsp, newErr
		}
		if rsp.StatusCode == 503 {
			var v model.SmContextCreateError
			err = a.client.decode(&v, localVarBody, rsp.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, rsp, newErr
			}
			newErr.model = v
			return localVarReturnValue, rsp, newErr
		}
		if rsp.StatusCode == 504 {
			var v model.SmContextCreateError
			err = a.client.decode(&v, localVarBody, rsp.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, rsp, newErr
			}
			newErr.model = v
			return localVarReturnValue, rsp, newErr
		}
		if rsp.StatusCode == 0 {
			var v model.SmContextCreateError
			err = a.client.decode(&v, localVarBody, rsp.Header.Get("Content-Type"))
			if err != nil {
				newErr.error = err.Error()
				return localVarReturnValue, rsp, newErr
			}
			newErr.model = v
			return localVarReturnValue, rsp, newErr
		}
		return localVarReturnValue, rsp, newErr
	}
	
	return localVarReturnValue, rsp, nil
}


/*func (a *IndividualSMContextApiService)PostRetrieveSmContext(){

}

func (a *IndividualSMContextApiService)PostUpdateSmContext(){

}

func (a *IndividualSMContextApiService)PostReleaseSmContext(){

}

func (a *PDUSessionsCollection)PostPduSessions(){

}

func (a *IndividualPDUSessionForHSMF)PostUpdatePduSession(){

}

func (a *IndividualPDUSessionForHSMF)PostReleasePduSession(){

}*/




